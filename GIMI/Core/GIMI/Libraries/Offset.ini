namespace = global\offset
; OffsetFix.ini Version 3.9.1
; - Addef nightsoul active offset

; Check latest version at: https://github.com/leotorrez/LeoTools/releases
; Author: LeoTorreZ
;
; Description: - Offsets models in the vertical axis
;              - Experimental face scale - Somewhat deprecated
;              - Experimental face weapon offset
;
; How to use: https://github.com/leotorrez/LeoTools/blob/main/guides/ChangeSizeGuide.md
;
[Constants] 
	global $active = 0
	global $faceActive = 0
	global $offset = 0
	global $faceOffset = 0
	global $faceScale = 1

[Present]
	post x169 = 0
	post x170 = 0
	post x171 = 1
	post $active = 0
	post $faceActive = 0

[CommandListOffset]
	x169 = $offset
	$active = 1

[CommandListOffsetFace]
	x169 = $faceOffset
	x171 = $faceScale
	$faceActive = 1

[CommandListCheck]
	pre x169 = 0
	pre x170 = 0
	pre x171 = 1
	pre $active = 0
	pre $faceActive = 0
	if $costume_mods
		checktextureoverride = ps-t0
		checktextureoverride = ps-t1
		checktextureoverride = ps-t2
		checktextureoverride = ps-t3
		checktextureoverride = ps-t4
		checktextureoverride = ps-t5
		checktextureoverride = ps-t6
		checktextureoverride = ps-t7
		checktextureoverride = ps-t8
		checktextureoverride = ps-t9
		checktextureoverride = vb0
		checktextureoverride = vb1
		checktextureoverride = vb2
		checktextureoverride = ib
		x140 = 0
	endif
	post x169 = 0
	post x170 = 0
	post x171 = 1
	post $active = 0
	post $faceActive = 0

[ShaderOverrideOutline]
	hash = ca15e550c2774d95
	run = CommandListCheck
	if $active == 1 || $faceActive == 1
		drawindexed = auto
	endif

[ShaderOverrideNatlanDiffuseVS]
	hash = d0c680ab5914dcea
	run = CommandListCheck
	if $active == 1 || $faceActive == 1
		drawindexed = auto
	endif

[ShaderOverrideNatlanOutlineVS]
	hash = 58660437e3c06faa
	run = CommandListCheck
	if $active == 1 || $faceActive == 1
		drawindexed = auto
	endif

[ShaderOverrideNatlanFaceDiffuseVS]
	hash = f7a15b4375ab68de
	run = CommandListCheck
	if $active == 1 || $faceActive == 1
		drawindexed = auto
	endif

[ShaderOverrideNatlanFaceOutlineVS]
	hash = 8afb7cf4bdf16498
	run = CommandListCheck
	if $active == 1 || $faceActive == 1
		drawindexed = auto
	endif

[ShaderOverrideNatlanFaceOutlineVSFXActive]
	hash = 00e3592cc87039cd
	run = CommandListCheck
	if $active == 1 || $faceActive == 1
		drawindexed = auto
	endif

[ShaderOverrideNatlanNightsoulVSFXActive]
	hash = 41299170b7e85eb5
	run = CommandListCheck
	if $active == 1 || $faceActive == 1
		drawindexed = auto
	endif

[ShaderOverrideNatlanOutlineVSFXActive]
	hash = 694346f7a4f392a2
	run = CommandListCheck
	if $active == 1 || $faceActive == 1
		drawindexed = auto
	endif

[ShaderOverrideNatlanFaceDiffuseVSFXActive]
	hash = 6324fa1eae4bd25c
	run = CommandListCheck
	if $active == 1 || $faceActive == 1
		drawindexed = auto
	endif

[ShaderOverrideNatlanFaceNightsoulVSFXActive]
	hash = 3f67e8fbcd35911e
	run = CommandListCheck
	if $active == 1 || $faceActive == 1
		drawindexed = auto
	endif

[ShaderOverrideNatlanDiffuseVSFXActive]
	hash = 901032b8a4cdf787
	run = CommandListCheck
	if $active == 1 || $faceActive == 1
		drawindexed = auto
	endif

[ShaderOverrideFaceOutline]
	hash = a40a83e222fde9d5
	run = CommandListCheck
	if $faceActive == 1
		drawindexed = auto
	endif
	
[ShaderOverrideOutlineVS2]
	hash = 42ea519379377965
	run = CommandListCheck
	if $active == 1 || $faceActive == 1
		drawindexed = auto
	endif

[ShaderOverrideFaceOutline2]
	hash = 958c81d7eb2b5c84
	run = CommandListCheck
	if $faceActive == 1
		drawindexed = auto
	endif

[ShaderOverrideWeaponOutline]
	hash = bf0c8aa094538450
	run = CommandListCheck
	if $active == 1
		drawindexed = auto
	endif

; [ShaderOverrideAA1]
; 	hash = aa6d4645035e2580
; 	run = CommandListCheck
; 	if $active == 1
; 		drawindexed = auto
; 	endif
	
; [ShaderOverrideAA2]
; 	hash = 10dd87d128793032
; 	run = CommandListCheck
; 	if $active == 1
; 		drawindexed = auto
; 	endif

[ShaderRegexMesh]
	shader_model = vs_5_0
	temps = ini
	run = CommandListCheck

[ShaderRegexWeaponTransparency]
	shader_model = vs_5_0
	temps = ini
	run = CommandListCheck

[ShaderRegexWeapon]
	shader_model = vs_5_0
	temps = ini
	run = CommandListCheck

;---------------------------------- REGEX MAGIC ----------------------------------
[ShaderRegexMesh.Pattern]
(?P<AAA>mul r\d+.\w+, )(?P<BBB>r\d+.\w)(?P<CCC>\w+, cb\d+\[\d+\].\w+\n
mad r\d+.\w+, cb\d+\[\d+\].\w+, r\d+.\w+, r\d+.\w+\n
mad r\d+.\w+, cb\d+\[\d+\].\w+, r\d+.\w+, r\d+.\w+\n
mad r\d+.\w+, cb\d+\[\d+\].\w+, r\d+.\w+, r\d+.\w+\n
lt r\d.\w, cb0\[\d+].\w, l\(0.950000\)\n)

[ShaderRegexMesh.InsertDeclarations]
dcl_resource_texture1d (float,float,float,float) t120

[ShaderRegexMesh.Pattern.Replace]
ld_indexable(texture1d)(float,float,float,float) ${ini}.xyzw, l(169,0), t120.xyzw\n
add ${BBB}, ${BBB}, ${ini}.x\n
${AAA}${BBB}${CCC}\n

[ShaderRegexWeaponTransparency.Pattern]
(?P<AAA>mul r\d+.\w+, )(?P<BBB>r\d+.\w)(?P<CCC>\w+, cb\d+\[\d+\].\w+
\s+mad r\d+.\w+, cb\d+\[\d+\].\w+, r\d+.\w+, r\d+.\w+
\s+mad r\d+.\w+, cb\d+\[\d+\].\w+, r\d+.\w+, r\d+.\w+
\s+mad r\d+.\w+, cb\d+\[\d+\].\w+, r\d+.\w+, r\d+.\w+
\s+mad o\d+.\w+, -cb\d+\[\d+\].\w+, r\d+.\w+, r\d+.\w+)

[ShaderRegexWeaponTransparency.InsertDeclarations]
dcl_resource_texture1d (float,float,float,float) t120

[ShaderRegexWeaponTransparency.Pattern.Replace]
ld_indexable(texture1d)(float,float,float,float) ${ini}.xyzw, l(169,0), t120.xyzw\n
add ${BBB}, ${BBB}, ${ini}.x\n
${AAA}${BBB}${CCC}\n
	
[ShaderRegexWeapon.Pattern]
(?P<AAA>mul r\d+.\w+, )(?P<BBB>r\d+.\w)(?P<CCC>\w+, cb\d+\[\d+\].\w+
\s+mad r\d+.\w+, cb\d+\[\d+\].\w+, r\d+.\w+, r\d+.\w+
\s+mad r\d+.\w+, cb\d+\[\d+\].\w+, r\d+.\w+, r\d+.\w+
\s+mad r\d+.\w+, cb\d+\[\d+\].\w+, r\d+.\w+, r\d+.\w+
\s+mul r\d+.\w+, r\d+.\w+, cb\d+\[\d+\].\w+)

[ShaderRegexWeapon.InsertDeclarations]
dcl_resource_texture1d (float,float,float,float) t120

[ShaderRegexWeapon.Pattern.Replace]
ld_indexable(texture1d)(float,float,float,float) ${ini}.xyzw, l(169,0), t120.xyzw\n
add ${BBB}, ${BBB}, ${ini}.x\n
${AAA}${BBB}${CCC}\n

; ----------------------------------------------- TESTING GROUNDS --------------------------------------
; ---------------------------------- YE WHO ENTER HERE LEAVE ALL HOPES BEHIND --------------------------

; [ShaderOverrideBlurMapperPS]
; 	hash = 01ccc4c68a895139
; 	; handling=skip
; 	if $active == 1 || $faceActive == 1
; 		o0=null
; 	endif
; [ShaderOverrideBlurMapperVS]
; 	hash = 2e6002a3794c7128
; 	; handling=skip
; 	if $active == 1 || $faceActive == 1
; 		o0=null
; 	endif

; [ShaderOverrideBlurMapper]
; 	hash = 2e6002a3794c7128
; 	run = CommandListCheck
; 	if $active == 1 || $faceActive == 1
; 		drawindexed = auto
; 	endif

; [ShaderOverrideGodKnowsWhatThisIsButIfIDontPutItHereStuffBreaks3]
; 	hash = 3461b18ffe2c3e1f
; 	run = CommandListCheck
	
; [ShaderOverrideGodKnowsWhatThisIsButIfIDontPutItHereStuffBreaks]
; 	hash = 0aee6ad0233c7da6
; 	run = CommandListCheck
; 	run = CommandListLetsHopeThisFixesStuff

; [ShaderOverrideGodKnowsWhatThisIsButIfIDontPutItHereStuffBreaks2]
; 	hash = 5acd62696e014148
; 	run = CommandListCheck
; 	run = CommandListLetsHopeThisFixesStuff

; [CommandListLetsHopeThisFixesStuff]
; 	if $newcheck != 0
; 		x169=$newcheck
; 		drawindexed = auto
; 		post x160=0
; 		post $newcheck=0
; 	endif

; [TextureOverrideCurseRenderTarget]
; hash = 584e9919
; ; handling = skip
; ps-t0=null





; -----------PAST THIS POINT OLD CODE---- REFRAIN FROM LOOKING TOO HARD------------------


; [ShaderRegexOutline]
; 	shader_model = vs_5_0
; 	temps = ini
; 	run = CommandListCheck
; 	if $active == 1
; 		drawindexed = auto
; 	endif

; [ShaderRegexOutline.Pattern]
; (?<ZZZ>\s+mov r\d.\w, cb\d\[\d+].x\n
; \s+mov r\d.\w, cb\d\[\d+].x\n
; \s+mov r\d.\w, cb\d\[\d+].x\n)
; (?<AAA>\s+dp3 r\d.\w, r\d.\w+, )(?<BBB>r\d)(?<CCC>.\w+\n
; \s+mov r\d.x, cb\d\[\d+].y\n
; \s+mov r\d.y, cb\d\[\d+].y\n
; \s+mov r\d.z, cb\d\[\d+].y\n
; \s+dp3 r\d.y, r\d.\w+, r\d.\w+\n
; \s+mov r\d.x, cb\d\[\d+].z\n
; \s+mov r\d.y, cb\d\[\d+].z\n
; \s+mov r\d.z, cb\d\[\d+].z\n
; \s+dp3 r\d.z, r\d.\w+, r\d.\w+\n
; \s+mov r\d.x, cb\d\[\d+].w\n
; \s+mov r\d.y, cb\d\[\d+].w\n
; \s+mov r\d.z, cb\d\[\d+].w\n
; \s+mov r\d.w, cb\d\[\d+].w\n
; \s+dp4 r\d.\w, r\d.\w+, r\d.\w+\n
; \s+eq r\d.\w, cb\d\[\d+].\w, l\(1\.000000\)\n)

; [ShaderRegexOutline.InsertDeclarations]
; dcl_resource_texture1d (float,float,float,float) t120

; [ShaderRegexOutline.Pattern.Replace]
; \n
;   ld_indexable(texture1d)(float,float,float,float) xxx.xyzw, l(169,0), t120.xyzw
;   ${ZZZ}\n
;   add ${BBB}.y, ${BBB}.y, xxx.x\n
;   ${AAA}${BBB}${CCC}


; [ShaderOverrideMeat]
; 	hash = 110b0550e4ea38af
; 	run = CommandListCheck
; 	if  $active == 1
; 		drawindexed = auto
; 	endif

; [ShaderOverrideMeat2]
; 	hash = ac17fc996680a93a
; 	run = CommandListCheck
; 	if $active == 1
; 		drawindexed = auto
; 	endif

; [ShaderOverrideOutline]
; 	hash = 58b8261c24d99d4c
; 	run = CommandListCheck
; 	if $active == 1 || $faceActive == 1
; 		drawindexed = auto
; 	endif
	
; [ShaderOverrideOutline2]
; 	hash = 0658bcee927fbcab
; 	run = CommandListCheck
; 	if $active == 1 || $faceActive == 1
; 		drawindexed = auto
; 	endif
	
; [ShaderOverrideFaceOutline]
; 	hash = dc0cb8e2505e7624
; 	run = CommandListCheck
; 	if $faceActive == 1
; 		drawindexed = auto
; 	endif
	
; [ShaderOverrideFaceMesh]
; 	hash = ac08367ac2bb8545
; 	run = CommandListCheck
; 	if $faceActive == 1
; 		drawindexed = auto
; 	endif

; [ShaderOverrideWeaponMeat]
; 	hash=03226e85691bd4ce
; 	run=CommandListCheck

; [ShaderOverrideWeaponOutline]
; 	hash=bc11979b6fc73508
; 	run=CommandListCheck


; [ShaderOverrideWeaponmesh1]
; 	hash = 74bd64734fbefdb4
; 	run = CommandListCheck
; 	if $active == 1
; 		drawindexed = auto
; 	endif
	
; [ShaderOverrideWeaponMesh2]
; 	hash = 3afd2f76b93ac80f
; 	run = CommandListCheck
; 	if $active == 1
; 		drawindexed = auto
; 	endif

; [ShaderOverrideWeaponTransparency]
; 	hash = 4eaca7e2f35c2ec4 
; 	run = CommandListCheck
; 	if $active == 1
; 		drawindexed = auto
; 	endif
